(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{431:function(t,e,s){"use strict";s.r(e);var v=s(56),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("JavaScript 是单线程")])]),t._v(" "),s("h2",{attrs:{id:"什么是宏任务和微任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是宏任务和微任务"}},[t._v("#")]),t._v(" 什么是宏任务和微任务")]),t._v(" "),s("ul",[s("li",[t._v("微任务是指在当前任务执行结束后立即执行的任务，它可以看作是在当前任务的“尾巴”添加的任务。")])]),t._v(" "),s("p",[t._v("​ 常见的微任务包括 ：Promise then/catch 回调函数、process.nextTick、Object.observe（已废弃）、MutationObserver。")]),t._v(" "),s("ul",[s("li",[t._v("宏任务是指需要排队等待 JavaScript 引擎空闲时才能执行的任务。")])]),t._v(" "),s("p",[t._v("​ 常见的宏任务包括 ：setTimeout、setInterval、setImmediate（Node.js 独有）、requestAnimationFrame、I/O 操作、UI 渲染。")]),t._v(" "),s("h2",{attrs:{id:"执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[t._v("#")]),t._v(" 执行顺序")]),t._v(" "),s("p",[t._v("JavaScript 引擎会先执行当前任务中的所有"),s("strong",[t._v("微任务")]),t._v("，然后再执行宏任务队列中的第一个任务。这个过程会不断重复，直到宏任务队列中的任务被全部执行完毕。")]),t._v(" "),s("ol",[s("li",[t._v("执行同步任务，遇到宏任务/微任务时，将其加到宏/微任务队列中")]),t._v(" "),s("li",[t._v("执行所有的微任务队列中的任务，直到微任务队列为空")]),t._v(" "),s("li",[t._v("执行宏任务队列中的第一个任务，直到宏任务队列为空")]),t._v(" "),s("li",[t._v("重复 2 和 3，直到所有任务都被执行完毕\n"),s("img",{attrs:{src:"/notes/imgs/eventloop.gif",alt:"eventloop"}}),t._v(" "),s("strong",[t._v("注意：微任务比宏任务优先级要高，因此在同一个任务中，如果既有微任务又有宏任务，那么微任务会先执行完毕。而在不同的任务中，宏任务的执行优先级要高于微任务，因此在一个宏任务执行完毕后，它才会执行下一个宏任务和微任务队列中的任务。")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);