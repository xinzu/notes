{"remainingRequest":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\myCode\\some-document-myself\\vuepress-notes\\docs\\css\\scss、less.md?vue&type=template&id=2f2be176&","dependencies":[{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\docs\\css\\scss、less.md","mtime":1628476431960},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645083265930},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1638347559982},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645083265930},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\index.js","mtime":1638347559982},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1645083264267}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAi5Y+Y6YePIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiPlj5jph48iIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIg5Y+Y6YePIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJAd2lkdGg6IDEwcHg7XG5AaGVpZ2h0OiBAd2lkdGg7XG5cbiNoZWFkZXIge1xuICB3aWR0aDogQHdpZHRoO1xuICBoZWlnaHQ6IEBoZWlnaHQ7XG59XG5cbi8vIOe8luivkeS4uu+8mlxuI2hlYWRlciB7XG5cdHdpZHRoOiAxMHB4O1xuXHRoZWlnaHQ6IDEwcHg7XG59XG4iCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICLmt7flkIgiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI+a3t+WQiCIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiDmt7flkIgiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIi5ib3JkZXJlZCB7XG4gIGJvcmRlci10b3A6IGRvdHRlZCAxcHggYmxhY2s7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIDJweCBibGFjaztcbn1cblxuI21lbnUgYSB7XG4gIGNvbG9yOiAjMTExO1xuICAuYm9yZGVyZWQoKTtcbn1cblxuLnBvc3QgYSB7XG4gIGNvbG9yOiByZWQ7XG4gIC5ib3JkZXJlZCgpO1xufVxuXG4vLyDnvJbor5HkuLpcbiNtZW51IGEge1xuICBjb2xvcjogIzExMTtcbiAgYm9yZGVyLXRvcDogZG90dGVkIDFweCBibGFjaztcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgMnB4IGJsYWNrO1xufVxuXG4ucG9zdCBhIHtcbiAgY29sb3I6IHJlZDtcbiAgYm9yZGVyLXRvcDogZG90dGVkIDFweCBibGFjaztcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgMnB4IGJsYWNrO1xufVxuIgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAi5bWM5aWXIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiPltYzlpZciIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIg5bWM5aWXIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICIjaGVhZGVyIHtcbiAgY29sb3I6IGJsYWNrO1xuICAubmF2aWdhdGlvbiB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG4gIC5sb2dvIHtcbiAgICB3aWR0aDogMzAwcHg7XG4gIH1cbn1cblxuLy8g57yW6K+R5Li6XG4jaGVhZGVyIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuI2hlYWRlciAubmF2aWdhdGlvbiB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbiNoZWFkZXIgLmxvZ28ge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbi8vIOS8quexuy/kvKrlhYPntKBcbiNoZWFkZXIge1xuICBjb2xvcjogYmxhY2s7XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnXG4gIH1cbn1cbiIKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImgxIiwgeyBhdHRyczogeyBpZDogIui/kOeulyIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIj6L+Q566XIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIOi/kOeulyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJibG9ja3F1b3RlIiwgWwogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KCLnrpfmnK/ov5DnrpfnrKYgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoIisiKV0pLAogICAgICAgICAgX3ZtLl92KCLjgIEiKSwKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigiLSIpXSksCiAgICAgICAgICBfdm0uX3YoIuOAgSIpLAogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCIqIildKSwKICAgICAgICAgIF92bS5fdigi44CBIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoIi8iKV0pLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIOWPr+S7peWvueS7u+S9leaVsOWtl+OAgeminOiJsuaIluWPmOmHj+i/m+ihjOi/kOeul+OAguWmguaenOWPr+iDveeahOivne+8jOeul+acr+i/kOeul+espuWcqOWKoOOAgeWHj+aIluavlOi+g+S5i+WJjeS8mui/m+ihjOWNleS9jeaNoueul+OAguiuoeeul+eahOe7k+aenOS7peacgOW3puS+p+aTjeS9nOaVsOeahOWNleS9jeexu+Wei+S4uuWHhuOAguWmguaenOWNleS9jeaNoueul+aXoOaViOaIluWkseWOu+aEj+S5ie+8jOWImeW/veeVpeWNleS9jeOAguaXoOaViOeahOWNleS9jeaNoueul+S+i+Wmgu+8mnB4IOWIsCBjbSDmiJYgcmFkIOWIsCAlIOeahOi9rOaNouOAgiIKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJAY29udmVyc2lvbi0xOiA1Y20gKyAxMG1tOyAvLyDnu5PmnpzmmK8gNmNtXG5AY29udmVyc2lvbi0yOiAyIC0gM2NtIC0gNW1tOyAvLyDnu5PmnpzmmK8gLTEuNWNtXG5cbkBpbmNvbXBhdGlibGUtdW5pdHM6IDIgKyA1cHggLSAzY207IC8vIOe7k+aenOaYryA0cHhcblxuQGJhc2U6IDUlO1xuQGZpbGxlcjogQGJhc2UgKiAyOyAvLyDnu5PmnpzmmK8gMTAlXG5Ab3RoZXI6IEBiYXNlICsgQGZpbGxlcjsgLy8g57uT5p6c5pivIDE1JVxuXG5AYmFzZTogMmNtICogM21tOyAvLyDnu5PmnpzmmK8gNmNtXG5cbkBjb2xvcjogIzIyNDQ4OCAvIDI7IC8v57uT5p6c5pivICMxMTIyNDRcbmJhY2tncm91bmQtY29sb3I6ICMxMTIyNDQgKyAjMTExOyAvLyDnu5PmnpzmmK8gIzIyMzM1NVxuIgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAi6L2s5LmJIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiPovazkuYkiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIg6L2s5LmJIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJAbWluNzY4OiAobWluLXdpZHRoOiA3NjhweCk7XG4uZWxlbWVudCB7XG4gIEBtZWRpYSBAbWluNzY4IHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgfVxufVxuXG4vLyDnvJbor5HkuLpcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuZWxlbWVudCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbn1cbiIKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImgxIiwgeyBhdHRyczogeyBpZDogIuWHveaVsCIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIj5Ye95pWwIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIOWHveaVsCIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICLpgLvovpHlh73mlbAiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI+mAu+i+keWHveaVsCIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIg6YC76L6R5Ye95pWwIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImlmIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNpZiIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBpZiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiQHNvbWU6IGZvbztcblxuZGl2IHtcbiAgbWFyZ2luOiBpZigoMiA+IDEpLCAwLCAzcHgpO1xuICBjb2xvcjogIGlmKChpc2NvbG9yKEBzb21lKSksIEBzb21lLCBibGFjayk7XG59XG5cbi8vIOe8luivkeS4ulxuZGl2IHtcbiAgbWFyZ2luOiAwO1xuICBjb2xvcjogIGJsYWNrO1xufVxuIgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiYm9vbGVhbiIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjYm9vbGVhbiIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBib29sZWFuIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJAYmc6IGJsYWNrO1xuQGJnLWxpZ2h0OiBib29sZWFuKGx1bWEoQGJnKSA+IDUwJSk7XG5cbmRpdiB7XG4gIGJhY2tncm91bmQ6IEBiZzsgXG4gIGNvbG9yOiBpZihAYmctbGlnaHQsIGJsYWNrLCB3aGl0ZSk7XG59XG5cbi8vIOe8luivkeS4ulxuZGl2IHtcbiAgYmFja2dyb3VuZDogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiIKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogIuWtl+espuS4suebuOWFs+WHveaVsCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIj5a2X56ym5Liy55u45YWz5Ye95pWwIiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiDlrZfnrKbkuLLnm7jlhbPlh73mlbAiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiZXNjYXBlIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNlc2NhcGUiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgZXNjYXBlIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogInVybC1lbmNvZGluZyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjdXJsLWVuY29kaW5nIiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBVUkwtZW5jb2RpbmciKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigiZXNjYXBlKCdhPTEnKVxuXG4vLyDnvJbor5HkuLpcbmElM0QxXG4iKV0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImZvcm1hdCIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjZm9ybWF0IiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICUtLWZvcm1hdCIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAnZm9ybWF0LWEtZDogJSgicmVwZXRpdGlvbnM6ICVhIGZpbGU6ICVkIiwgMSArIDIsICJkaXJlY3RvcnkvZmlsZS5sZXNzIik7XG5mb3JtYXQtYS1kLXVwcGVyOiAlKFwncmVwZXRpdGlvbnM6ICVBIGZpbGU6ICVEXCcsIDEgKyAyLCAiZGlyZWN0b3J5L2ZpbGUubGVzcyIpO1xuZm9ybWF0LXM6ICUoInJlcGV0aXRpb25zOiAlcyBmaWxlOiAlcyIsIDEgKyAyLCAiZGlyZWN0b3J5L2ZpbGUubGVzcyIpO1xuZm9ybWF0LXMtdXBwZXI6ICUoXCdyZXBldGl0aW9uczogJVMgZmlsZTogJVNcJywgMSArIDIsICJkaXJlY3RvcnkvZmlsZS5sZXNzIik7XG5cbi8vIOe8luivkeS4ulxuZm9ybWF0LWEtZDogInJlcGV0aXRpb25zOiAzIGZpbGU6ICJkaXJlY3RvcnkvZmlsZS5sZXNzIiI7XG5mb3JtYXQtYS1kLXVwcGVyOiAicmVwZXRpdGlvbnM6IDMgZmlsZTogJTIyZGlyZWN0b3J5JTJGZmlsZS5sZXNzJTIyIjtcbmZvcm1hdC1zOiAicmVwZXRpdGlvbnM6IDMgZmlsZTogZGlyZWN0b3J5L2ZpbGUubGVzcyI7XG5mb3JtYXQtcy11cHBlcjogInJlcGV0aXRpb25zOiAzIGZpbGU6IGRpcmVjdG9yeSUyRmZpbGUubGVzcyI7XG5cbi8vIGEvZDrlvJXlj7fkuZ/kvJrnm7TmjqXljIXmi6zov5vljrvmm7/mjaJcbi8vIHM65Lya5Y675o6J5byV5Y+3XG4vL0EvRC9TOuWkp+WGmeaXtuS8muWwhlwnL1wn56ym5Y+36L+b6KGM6L2s5o2iXG4nCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJyZXBsYWNlIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNyZXBsYWNlIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIHJlcGxhY2UiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfYygic3Ryb25nIiwgW192bS5fdigi57G75Ly85LqOSlPkuK3nmoRyZXBsYWNl77yMIildKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX2MoInN0cm9uZyIsIFtfdm0uX3YoIuesrOS4gOS4quWAvOaYr+WOn+aVsOaNriIpXSksIF92bS5fdigi77ybIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW19jKCJzdHJvbmciLCBbX3ZtLl92KCLnrKzkuozkuKrlgLzmmK/pnIDopoHmm7/mjaLmlbDmja4v5q2j5YiZ77ybIildKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIuesrOS4ieS4quWAvOaYr+abv+aNoueahOe7k+aenO+8jOWPr+S7peaYryQx6L+Z56eN5qC85byP77ybIildKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfYygic3Ryb25nIiwgW192bS5fdigi56ys5Zub5Liq5YC85piv5qCH6K6w77yIZ2nvvIkiKV0pXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgJ3JlcGxhY2UoIkhlbGxvLCBNYXJzPyIsICJNYXJzXFw/IiwgIkVhcnRoISIpO1xuXG4vL+e8luivkeS4ulxuIkhlbGxvLCBFYXJ0aCEiO1xuJwogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAibGlzdOebuOWFs+WHveaVsCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbGlzdOebuOWFs+WHveaVsCIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgTGlzdOebuOWFs+WHveaVsCIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJsZW5ndGgiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2xlbmd0aCIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBsZW5ndGgiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgJ0BsaXN0OiAiYmFuYW5hIiwgInRvbWF0byIsICJwb3RhdG8iLCAicGVhY2giO1xubjogbGVuZ3RoKEBsaXN0KTtcblxuLy8gcmVzdWx0XG5uOiA0XG4nCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJleHRyYWN0IiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNleHRyYWN0IiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIGV4dHJhY3QiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfYygic3Ryb25nIiwgW192bS5fdigi5Y+WbGlzdOeahOesrOWHoOS9je+8jOS7jjHlvIDlp4siKV0pXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIkBsaXN0OiBhcHBsZSwgcGVhciwgY29jb251dCwgb3JhbmdlO1xudmFsdWU6IGV4dHJhY3QoQGxpc3QsIDMpO1xuXG4vLyByZXN1bHRcbnZhbHVlOiBjb2NvbnV0O1xuIgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAicmFuZ2UiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI3JhbmdlIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIHJhbmdlIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigic3RhcnQiKV0pLAogICAgICAgICAgX3ZtLl92KCIgLSAob3B0aW9uYWwpIOWIneWni+WAvCIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFtfYygiY29kZSIsIFtfdm0uX3YoImVuZCIpXSksIF92bS5fdigiIC0g57uT5p2f5YC8IildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbX2MoImNvZGUiLCBbX3ZtLl92KCJzdGVwIildKSwgX3ZtLl92KCIgLSAob3B0aW9uYWwpIildKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfYygic3Ryb25nIiwgW192bS5fdigi55Sf5oiQ5LiA5Liq5YyF5ZCr5LiA57O75YiX5YC855qE5YiX6KGoIildKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJ2YWx1ZTogcmFuZ2UoNCk7XG5ib3JkZXI6IHJhbmdlKDEwcHgsIDMwcHgsIDEwKTtcblxuLy9yZXN1bHRcbnZhbHVlOiAxIDIgMyA0XG5ib3JkZXI6IDEwcHgsIDIwcHgsIDMwcHhcbiIKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImVhY2giIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2VhY2giIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgZWFjaCIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbX2MoImNvZGUiLCBbX3ZtLl92KCJsaXN0IildKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFtfYygiY29kZSIsIFtfdm0uX3YoInJ1bGVzIildKV0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiQHNlbGVjdG9yczogYmx1ZSwgZ3JlZW4sIHJlZDtcbmVhY2goQHNlbGVjdG9ycywge1xuICAuc2VsLUB7dmFsdWV9IHtcbiAgICBhOiBiO1xuICB9XG59KTtcblxuQHNldDoge1xuICBvbmU6IGJsdWU7XG4gIHR3bzogZ3JlZW47XG4gIHRocmVlOiByZWQ7XG59XG4uc2V0IHtcbiAgZWFjaChAc2V0LCB7XG4gICAgQHtrZXl9LUB7aW5kZXh9OiBAdmFsdWU7XG4gIH0pO1xufVxuXG4uc2V0LTIoKSB7XG4gIG9uZTogYmx1ZTtcbiAgdHdvOiBncmVlbjtcbiAgdGhyZWU6IHJlZDtcbn1cbi5zZXQtMiB7XG4gIC8vIENhbGwgbWl4aW4gYW5kIGl0ZXJhdGUgZWFjaCBydWxlXG4gIGVhY2goLnNldC0yKCksIC4oQHYsIEBrLCBAaSkge1xuICAgIEB7a30tQHtpfTogQHY7XG4gIH0pO1xufVxuXG4vLyByZXN1bHRcbi5zZWwtYmx1ZSB7XG4gIGE6IGI7XG59XG4uc2VsLWdyZWVuIHtcbiAgYTogYjtcbn1cbi5zZWwtcmVkIHtcbiAgYTogYjtcbn1cblxuLnNldCB7XG4gIG9uZS0xOiBibHVlO1xuICB0d28tMjogZ3JlZW47XG4gIHRocmVlLTM6IHJlZDtcbn1cblxuLnNldC0yIHtcbiAgb25lLTE6IGJsdWU7XG4gIHR3by0yOiBncmVlbjtcbiAgdGhyZWUtMzogcmVkO1xufVxuXG4iCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJtYXRoLWpzLW1hdGgteHh4IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNtYXRoLWpzLW1hdGgteHh4IiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIE1hdGggLS0gSlMgTWF0aC54eHgiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAidHlwZSIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjdHlwZSIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBUeXBlIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKCJwIiwgW192bS5fdigiaXNudW1iZXIiKV0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICJpc251bWJlcigxMjM0KTsgICAgIC8vIHRydWVcbmlzbnVtYmVyKDU2cHgpOyAgICAgLy8gdHJ1ZVxuaXNudW1iZXIoNy44JSk7ICAgICAvLyB0cnVlXG4iCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFtfYygicCIsIFtfdm0uX3YoImlzc3RyaW5nIildKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKCJwIiwgW192bS5fdigiaXNjb2xvciIpXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgImlzY29sb3IoI2ZmMCk7ICAgICAvLyB0cnVlXG5pc2NvbG9yKGJsdWUpOyAgICAgLy8gdHJ1ZVxuIgogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbX2MoInAiLCBbX3ZtLl92KCJpc2tleXdvcmQiKV0pXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW19jKCJwIiwgW192bS5fdigiaXN1cmwiKV0pXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCJpc3BpeGVsL2lzZW0iKV0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJpc3BpeGVsKDU2cHgpOyAgICAgLy8gdHJ1ZVxuIildKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbX2MoInAiLCBbX3ZtLl92KCJpc3BlcmNlbnRhZ2UiKV0pXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCJpc3VuaXQiKV0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICJpc3VuaXQoMTFweCwgcHgpOyAgLy8gdHJ1ZVxuaXN1bml0KDIuMiUsIHB4KTsgIC8vIGZhbHNlXG5pc3VuaXQoMzNweCwgcmVtKTsgLy8gZmFsc2VcbiIKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW19jKCJwIiwgW192bS5fdigiaXNydWxlc2V0IildKV0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJvdGhlciIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjb3RoZXIiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgT3RoZXIiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiY29sb3IiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2NvbG9yIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIGNvbG9yIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImltYWdlLXNpemUtaW1hZ2Utd2lkdGgtaW1hZ2UtaGVpZ2h0IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNpbWFnZS1zaXplLWltYWdlLXdpZHRoLWltYWdlLWhlaWdodCIgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBpbWFnZS1zaXplL2ltYWdlLXdpZHRoL2ltYWdlLWhlaWdodCIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdignaW1hZ2Utc2l6ZSgiZmlsZS5wbmciKTtcblxuLy8gcmVzdWx0XG4xMHB4IDEwcHhcbicpLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiY29udmVydCIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjY29udmVydCIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBjb252ZXJ0IiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICdjb252ZXJ0KDlzLCAibXMiKVxuY29udmVydCgxNGNtLCBtbSlcbmNvbnZlcnQoOCwgbW0pXG5cbi8vIHJlc3VsdFxuOTAwMG1zXG4xNDBtbVxuOFxuJwogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiY29sb3ItZGVmaW5pdGlvbi1mdW5jdGlvbnMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2NvbG9yLWRlZmluaXRpb24tZnVuY3Rpb25zIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIENvbG9yIERlZmluaXRpb24gRnVuY3Rpb25zIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoInJnYiIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW192bS5fdigicmdiYSIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiYXJnYiIpXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgxIiwgeyBhdHRyczogeyBpZDogIuWRveWQjeepuumXtOWSjOiuv+mXruespiIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIj5ZG95ZCN56m66Ze05ZKM6K6/6Zeu56ymIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIOWRveWQjeepuumXtOWSjOiuv+mXruespiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiI2J1bmRsZSgpIHtcbiAgLmJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIH1cbiAgfVxuICAudGFiIHsgLi4uIH1cbiAgLmNpdGF0aW9uIHsgLi4uIH1cbn1cbiNoZWFkZXIgYSB7XG4gIGNvbG9yOiBvcmFuZ2U7XG4gICNidW5kbGUuYnV0dG9uKCk7ICAvLyDov5jlj6/ku6XkuablhpnkuLogI2J1bmRsZSA+IC5idXR0b24g5b2i5byPXG59XG4iCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICLmmKDlsIQiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI+aYoOWwhCIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiDmmKDlsIQiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIiNjb2xvcnMoKSB7XG4gIHByaW1hcnk6IGJsdWU7XG4gIHNlY29uZGFyeTogZ3JlZW47XG59XG5cbi5idXR0b24ge1xuICBjb2xvcjogI2NvbG9yc1twcmltYXJ5XTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NvbG9yc1tzZWNvbmRhcnldO1xufVxuIgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAi5L2c55So5Z+fIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiPkvZznlKjln58iIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIg5L2c55So5Z+fIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoInN0cm9uZyIsIFsKICAgICAgICAgIF92bS5fdigi5re35ZCI77yIbWl4aW7vvInlkozlj5jph4/nmoTlrprkuYnkuI3lv4XlnKjlvJXnlKjkuYvliY3kuovlhYjlrprkuYkiKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAi5rOo6YeKIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiPms6jph4oiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIg5rOo6YeKIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX2MoInN0cm9uZyIsIFtfdm0uX3YoIuWdl+azqOmHiuWSjOihjOazqOmHiumDveWPr+S7peS9v+eUqCIpXSldKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICLlr7zlhaUiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI+WvvOWFpSIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiDlr7zlhaUiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfYygiY29kZSIsIFtfdm0uX3YoJ0BpbXBvcnQgInR5cG8uY3NzIjsnKV0pXSksCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}