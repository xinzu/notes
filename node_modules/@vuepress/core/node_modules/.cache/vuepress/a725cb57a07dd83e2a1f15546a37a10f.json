{"remainingRequest":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\myCode\\some-document-myself\\vuepress-notes\\docs\\基础知识扩展\\存储机制.md?vue&type=template&id=448e363a&","dependencies":[{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\docs\\基础知识扩展\\存储机制.md","mtime":1628476432318},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645083265930},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1638347559982},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645083265930},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\vue-loader\\lib\\index.js","mtime":1638347559982},{"path":"D:\\myCode\\some-document-myself\\vuepress-notes\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1645083264267}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}