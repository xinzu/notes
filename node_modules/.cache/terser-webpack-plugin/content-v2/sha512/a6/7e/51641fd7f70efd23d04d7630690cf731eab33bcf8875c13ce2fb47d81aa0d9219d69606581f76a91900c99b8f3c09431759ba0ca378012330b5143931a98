{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{412:function(t,e,a){\"use strict\";a.r(e);var v=a(56),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"vue2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue2\"}},[t._v(\"#\")]),t._v(\" vue2\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"基础\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基础\"}},[t._v(\"#\")]),t._v(\" 基础\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"vue对象选项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue对象选项\"}},[t._v(\"#\")]),t._v(\" vue对象选项\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"let vm = new Vue({\\n\\t// DOM\\n\\tel:  '#root',\\n\\ttemplate: <div></div>,\\n\\trender: () => {},\\n\\trenderError: () => {},\\n\\t// 数据\\n\\tdata: {},\\n\\tprops: {},\\n\\tmethods:{},\\n\\tcomputed:{},\\n\\twatch: {}\\n\\t// 生命周期钩子\\n\\tbeforeCreate:()=>{},\\n\\tcreated:()=>{},\\n\\tbeforeMount:()=>{},\\n\\tmounted:()=>{},\\n\\tbeforeUpdate:()=>{},\\n\\tupdated:()=>{},\\n\\tbeforeDestory:()=>{},\\n\\tdestoryed:()=>{},\\n\\tactivated:()=>{},\\n\\tdeactivated:()=>{},\\n\\terrorCaptured:()=>{},\\n\\t// 资源\\n\\tdirectives: {},\\n\\tfilters: {},\\n\\tcomponents:{},\\n\\t// 其他\\n\\tname: 'vm',\\n})\\n\")])])]),a(\"h4\",{attrs:{id:\"dom\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dom\"}},[t._v(\"#\")]),t._v(\" DOM\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"el\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#el\"}},[t._v(\"#\")]),t._v(\" el\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"如果 \"),a(\"code\",[t._v(\"render\")]),t._v(\" 函数和 \"),a(\"code\",[t._v(\"template\")]),t._v(\" property 都不存在，挂载 DOM 元素的 HTML 会被提取出来用作模板\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型：string | Element\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"限制：只在用new Vue创建实例时生效\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"详细：\")]),t._v(\" \"),a(\"p\",[t._v(\"实例挂载点\")])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"template\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#template\"}},[t._v(\"#\")]),t._v(\" template\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"如果 Vue 选项中包含\"),a(\"code\",[t._v(\"render\")]),t._v(\"函数，该模板将被忽略。\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型：string\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"详细：\")]),t._v(\" \"),a(\"p\",[t._v(\"替换挂载的元素。挂载元素的内容都将被忽略，除非模板的内容有分发插槽。\")])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"render\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#render\"}},[t._v(\"#\")]),t._v(\" render\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：(createElement: () => VNode) => VNode\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"rendererror\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rendererror\"}},[t._v(\"#\")]),t._v(\" renderError\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"当 \"),a(\"code\",[t._v(\"render\")]),t._v(\" 函数遭遇错误时，提供另外一种渲染输出。\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：(createElement: () => VNode,error: Error) => VNode\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据\"}},[t._v(\"#\")]),t._v(\" 数据\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"data\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#data\"}},[t._v(\"#\")]),t._v(\" data\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：Object | Function\")]),t._v(\" \"),a(\"li\",[t._v(\"限制：组件的定义只接受Function\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"props\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#props\"}},[t._v(\"#\")]),t._v(\" props\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型：Array\"),a(\"string\",[t._v(\" | Object\")])],1)]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"详细：props是对象时，可以检查prop类型\")]),t._v(\" \"),a(\"p\",[t._v(\"你可以基于对象的语法使用以下选项：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"type\")]),t._v(\"：可以是下列原生构造函数中的一种：\"),a(\"code\",[t._v(\"String\")]),t._v(\"、\"),a(\"code\",[t._v(\"Number\")]),t._v(\"、\"),a(\"code\",[t._v(\"Boolean\")]),t._v(\"、\"),a(\"code\",[t._v(\"Array\")]),t._v(\"、\"),a(\"code\",[t._v(\"Object\")]),t._v(\"、\"),a(\"code\",[t._v(\"Date\")]),t._v(\"、\"),a(\"code\",[t._v(\"Function\")]),t._v(\"、\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"、任何自定义构造函数、或上述内容组成的数组。会检查一个 prop 是否是给定的类型，否则抛出警告。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"default\")]),t._v(\"：\"),a(\"code\",[t._v(\"any\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"required\")]),t._v(\"：\"),a(\"code\",[t._v(\"Boolean\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"validator\")]),t._v(\"：\"),a(\"code\",[t._v(\"Function\")]),t._v(\"\\n自定义验证函数会将该 prop 的值作为唯一的参数代入。在非生产环境下，如果该函数返回一个 falsy 的值 (也就是验证失败)，一个控制台警告将会被抛出。\")])])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"propsdata\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#propsdata\"}},[t._v(\"#\")]),t._v(\" propsData\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"没用过没见过，先空着吧\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"computed\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#computed\"}},[t._v(\"#\")]),t._v(\" computed\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"计算属性，一般用于多个数据影响一个数据。\")]),t._v(\" \"),a(\"p\",[t._v(\"计算属性的结果会被缓存，如果依赖数据不变，再次调用时不会重新计算。\")]),t._v(\" \"),a(\"p\",[t._v(\"计算属性的用法和data一样\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：{ [key:string]: Fcuntion | { get : Function, set: Function } }\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"methods\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#methods\"}},[t._v(\"#\")]),t._v(\" methods\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"方法，需要手动调用\")]),t._v(\" \"),a(\"p\",[t._v(\"每次调用都会重新计算\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：{ [key: string]: Function }\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"watch\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#watch\"}},[t._v(\"#\")]),t._v(\" watch\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"监测，一般用于一个数据影响多个数据\")]),t._v(\" \"),a(\"p\",[t._v(\"依赖数据变化时自动调用\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：{ [key: string]: string | Function | Object | Array }  Function 应该是最常用的\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"生命周期\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生命周期\"}},[t._v(\"#\")]),t._v(\" 生命周期\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"一般钩子\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一般钩子\"}},[t._v(\"#\")]),t._v(\" 一般钩子\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\"}},[t._v(\"#\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.jpg\",alt:\"vue生命周期\"}})]),t._v(\" \"),a(\"h5\",{attrs:{id:\"activated-deactivated\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#activated-deactivated\"}},[t._v(\"#\")]),t._v(\" activated/deactivated\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"被 keep-alive 缓存的组件激活/停用时调用。\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"errorcaptured\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#errorcaptured\"}},[t._v(\"#\")]),t._v(\" errorCaptured\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"当捕获一个来自子孙组件的错误时被调用。2.5.0+ 新增\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：\"),a(\"code\",[t._v(\"(err: Error, vm: Component, info: string) => ?boolean\")])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"资源\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#资源\"}},[t._v(\"#\")]),t._v(\" 资源\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"components\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#components\"}},[t._v(\"#\")]),t._v(\" components\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"定义Vue实例可用组件\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"import ComponentA from 'xxx'\\nnew Vue({\\n  ...\\n  components: {\\n  \\t'component-a': ComponentA\\n  }\\n})\\n\")])])]),a(\"h5\",{attrs:{id:\"directives\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#directives\"}},[t._v(\"#\")]),t._v(\" directives\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4\"}},[t._v(\"自定义指令\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"定义Vue实例可用指令\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"new Vue({\\n  ...\\n  directives: {\\n    focus: {\\n      // 指令的定义\\n      inserted: function (el) {\\n        el.focus()\\n      }\\n    }\\n  }\\n})\\n\")])])]),a(\"h5\",{attrs:{id:\"filters\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#filters\"}},[t._v(\"#\")]),t._v(\" filters\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"#%E8%BF%87%E6%BB%A4%E5%99%A8\"}},[t._v(\"过滤器\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"定义Vue实例可用过滤器\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"new Vue({\\n  ...\\n  filters: {\\n  \\tcapitalize: function (value) {\\n  \\t\\t...\\n  \\t\\treturn ....\\n  \\t}\\n  }\\n})\\n\")])])]),a(\"h4\",{attrs:{id:\"其他\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#其他\"}},[t._v(\"#\")]),t._v(\" 其他\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"mixins\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mixins\"}},[t._v(\"#\")]),t._v(\" mixins\")]),t._v(\" \"),a(\"p\",[t._v(\"[混入](#混入 mixin)\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[t._v(\"mixins\")]),t._v(\" 选项接收一个混入对象的数组。\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：Array\"),a(\"Object\")],1)]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"var mixin = {\\n  created: function () { console.log(1) }\\n}\\nvar vm = new Vue({\\n  created: function () { console.log(2) },\\n  mixins: [mixin]\\n})\\n\")])])]),a(\"h5\",{attrs:{id:\"name\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#name\"}},[t._v(\"#\")]),t._v(\" name\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型：string\")]),t._v(\" \"),a(\"li\",[t._v(\"限制：只有作为组件选项时起作用\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#指令\"}},[t._v(\"#\")]),t._v(\" 指令\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"常用指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常用指令\"}},[t._v(\"#\")]),t._v(\" 常用指令\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"v-text\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-html\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-show\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-if\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-else-if\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-else\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-for\")]),t._v(\" \"),a(\"p\",[t._v(\"必须有唯一的key值，如果数据有插入/删除等影响原有数据顺序的情况，不建议使用index作为key值。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-on\")]),t._v(\" \"),a(\"p\",[t._v(\"绑定事件\")]),t._v(\" \"),a(\"p\",[t._v(\"可以简写为@click的形式\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-bind\")]),t._v(\" \"),a(\"p\",[t._v(\"动态属性\")]),t._v(\" \"),a(\"p\",[t._v(\"可以简写为:title的形式\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-model\")]),t._v(\" \"),a(\"p\",[t._v(\"双向绑定\")]),t._v(\" \"),a(\"p\",[t._v(\":value 和 @input 的语法糖\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-slot\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"#%E6%8F%92%E6%A7%BD\"}},[t._v(\"插槽\")])]),t._v(\" \"),a(\"p\",[t._v(\"v-slot: 插槽名，默认为default\")]),t._v(\" \"),a(\"p\",[t._v(\"可以简写为#header\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('\\x3c!-- 具名插槽 --\\x3e\\n<base-layout>\\n  <template v-slot:header>\\n    Header content\\n  </template>\\n\\n  Default slot content\\n\\n  <template v-slot:footer>\\n    Footer content\\n  </template>\\n</base-layout>\\n\\n\\x3c!-- 接收 prop 的具名插槽 --\\x3e\\n<infinite-scroll>\\n  <template v-slot:item=\"slotProps\">\\n    <div class=\"item\">\\n      {{ slotProps.item.text }}\\n    </div>\\n  </template>\\n</infinite-scroll>\\n\\n\\x3c!-- 接收 prop 的默认插槽，使用了解构 --\\x3e\\n<mouse-position v-slot=\"{ x, y }\">\\n  Mouse position: {{ x }}, {{ y }}\\n</mouse-position>\\n')])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-pre\")]),t._v(\" \"),a(\"p\",[t._v(\"跳过这个元素和它的子元素的编译过程。可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-cloak\")]),t._v(\" \"),a(\"p\",[t._v(\"这个指令保持在元素上直到关联实例结束编译。和 CSS 规则如 \"),a(\"code\",[t._v(\"[v-cloak] { display: none }\")]),t._v(\" 一起用时，这个指令可以隐藏未编译的 Mustache 标签直到实例准备完毕。\")]),t._v(\" \"),a(\"p\",[t._v(\"避免在data没有拿到页面出现 \"),a(\"code\",[t._v(t._s(t.msg))]),t._v(\"的情况\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"v-once\")]),t._v(\" \"),a(\"p\",[t._v(\"只渲染元素和组件\"),a(\"strong\",[t._v(\"一次\")]),t._v(\"。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"如果确定这个元素及其子组件以后再也不会变动时使用\")])])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"自定义指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自定义指令\"}},[t._v(\"#\")]),t._v(\" 自定义指令\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"钩子函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#钩子函数\"}},[t._v(\"#\")]),t._v(\" 钩子函数\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"bind\")]),t._v(\"：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"inserted\")]),t._v(\"：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"update\")]),t._v(\"：所在组件的 VNode 更新时调用，\"),a(\"strong\",[t._v(\"但是可能发生在其子 VNode 更新之前\")]),t._v(\"。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"componentUpdated\")]),t._v(\"：指令所在组件的 VNode \"),a(\"strong\",[t._v(\"及其子 VNode\")]),t._v(\" 全部更新后调用。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"unbind\")]),t._v(\"：只调用一次，指令与元素解绑时调用。\")])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"参数说明\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参数说明\"}},[t._v(\"#\")]),t._v(\" 参数说明\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"el\")]),t._v(\"：指令所绑定的元素，可以用来直接操作 DOM。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"binding\")]),t._v(\"：一个对象，包含以下 property：\\n\"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"name\")]),t._v(\"：指令名，不包括 \"),a(\"code\",[t._v(\"v-\")]),t._v(\" 前缀。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"value\")]),t._v(\"：指令的绑定值，例如：\"),a(\"code\",[t._v('v-my-directive=\"1 + 1\"')]),t._v(\" 中，绑定值为 \"),a(\"code\",[t._v(\"2\")]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"oldValue\")]),t._v(\"：指令绑定的前一个值，仅在 \"),a(\"code\",[t._v(\"update\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"componentUpdated\")]),t._v(\" 钩子中可用。无论值是否改变都可用。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"expression\")]),t._v(\"：字符串形式的指令表达式。例如 \"),a(\"code\",[t._v('v-my-directive=\"1 + 1\"')]),t._v(\" 中，表达式为 \"),a(\"code\",[t._v('\"1 + 1\"')]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"arg\")]),t._v(\"：传给指令的参数，可选。例如 \"),a(\"code\",[t._v(\"v-my-directive:foo\")]),t._v(\" 中，参数为 \"),a(\"code\",[t._v('\"foo\"')]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"modifiers\")]),t._v(\"：一个包含修饰符的对象。例如：\"),a(\"code\",[t._v(\"v-my-directive.foo.bar\")]),t._v(\" 中，修饰符对象为 \"),a(\"code\",[t._v(\"{ foo: true, bar: true }\")]),t._v(\"。\")])])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"vnode\")]),t._v(\"：Vue 编译生成的虚拟节点。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"oldVnode\")]),t._v(\"：上一个虚拟节点，仅在 \"),a(\"code\",[t._v(\"update\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"componentUpdated\")]),t._v(\" 钩子中可用。\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"除了 \"),a(\"code\",[t._v(\"el\")]),t._v(\" 之外，其它参数都应该是只读的。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"插槽\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#插槽\"}},[t._v(\"#\")]),t._v(\" 插槽\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"使用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用\"}},[t._v(\"#\")]),t._v(\" 使用\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"// 父组件\\n<Child>父组件传值</Child>\\n<Child></Child>\\n// Child子组件\\n<div>\\n\\t子组件内容...\\n\\t<slot>默认内容</slot>\\n</div>\\n\\n// 最终显示1\\n\\t子组件内容...\\n\\t父组件传值\\n// 最终显示2\\n\\t子组件内容...\\n\\t默认内容\\n\")])])]),a(\"h4\",{attrs:{id:\"具名插槽\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#具名插槽\"}},[t._v(\"#\")]),t._v(\" 具名插槽\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"用于组件内有多处插槽时，确定内容插入位置\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('// 父组件\\n<base-layout>\\n  <template v-slot:header>\\n    <h1>Here might be a page title</h1>\\n  </template>\\n\\n  <p>A paragraph for the main content.</p>\\n  <p>And another one.</p>\\n\\n  <template v-slot:footer>\\n    <p>Here\\'s some contact info</p>\\n  </template>\\n</base-layout>\\n\\n// 子组件\\n<div class=\"container\">\\n  <header>\\n    <slot name=\"header\"></slot>\\n  </header>\\n  <main>\\n    <slot></slot>\\n  </main>\\n  <footer>\\n    <slot name=\"footer\"></slot>\\n  </footer>\\n</div>\\n')])])]),a(\"h4\",{attrs:{id:\"作用域插槽\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#作用域插槽\"}},[t._v(\"#\")]),t._v(\" 作用域插槽\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('// 父组件获取子组件绑定的属性\\n// v-slot:default=\"slotProps\"  可以简写为   v-slot=\"slotProps\"  只有default插槽可以这么简写\\n<current-user>\\n  <template v-slot:default=\"slotProps\">\\n    {{ slotProps.user.firstName }}\\n  </template>\\n  <template v-slot:deconstruction=\"{user={firstName: \\'hh\\'}}\">\\n    {{ user.firstName }}\\n  </template>\\n</current-user>\\n\\n// 子组件绑定user属性\\n<span>\\n  <slot :user=\"user\">\\n    {{ user.lastName }}\\n  </slot>\\n  <slot :user=\"user\" name=\\'deconstruction\\'>\\n    解构插槽Prop\\n    这里可以用到ES6解构的所有语法，比如重命名、默认赋值\\n  </slot>\\n</span>\\n')])])]),a(\"h4\",{attrs:{id:\"缩写\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缩写\"}},[t._v(\"#\")]),t._v(\" 缩写\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v('v-slot:header=\"{user}\"')])]),t._v(\" \"),a(\"p\",[t._v(\"简写为\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v('#header=\"{user}\"')])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"default可以省略\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v('v-slot=\"{user}\"')])]),t._v(\" \"),a(\"p\",[t._v(\"简写为\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v('#=\"{user}\"')])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"废弃的用法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#废弃的用法\"}},[t._v(\"#\")]),t._v(\" 废弃的用法\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"slot\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"slot-scope\")])])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"// 父组件\\n<div slot='header' slot-scope=\\\"slotProps\\\"></div>\\n\")])])]),a(\"h3\",{attrs:{id:\"混入-mixin\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#混入-mixin\"}},[t._v(\"#\")]),t._v(\" 混入 mixin\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"一个混入对象可以包含任意组件选项。当组件使用混入对象时，所有混入对象的选项将被“混合”进入该组件本身的选项。\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"合并方式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#合并方式\"}},[t._v(\"#\")]),t._v(\" 合并方式\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"数据对象在内部会进行递归合并，并在发生冲突时以组件数据优先\")]),t._v(\" \"),a(\"li\",[t._v(\"值为对象的选项，例如 \"),a(\"code\",[t._v(\"methods\")]),t._v(\"、\"),a(\"code\",[t._v(\"components\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"directives\")]),t._v(\"，将被合并为同一个对象。两个对象键名冲突时，取组件对象的键值对\")]),t._v(\" \"),a(\"li\",[t._v(\"同名钩子函数将合并为一个数组，因此都将被调用。另外，混入对象的钩子将在组件自身钩子\"),a(\"strong\",[t._v(\"之前\")]),t._v(\"调用\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"过滤器\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#过滤器\"}},[t._v(\"#\")]),t._v(\" 过滤器\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"定义\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义\"}},[t._v(\"#\")]),t._v(\" 定义\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在组件内定义\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"filters: {\\n  capitalize: function (value) {\\n    if (!value) return ''\\n    value = value.toString()\\n    return value.charAt(0).toUpperCase() + value.slice(1)\\n  }\\n}\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"全局注册\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"Vue.filter('capitalize', function (value) {\\n  if (!value) return ''\\n  value = value.toString()\\n  return value.charAt(0).toUpperCase() + value.slice(1)\\n})\\n\")])])]),a(\"h4\",{attrs:{id:\"使用-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用-2\"}},[t._v(\"#\")]),t._v(\" 使用\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"过滤器可以用在两个地方：\"),a(\"strong\",[t._v(\"双花括号插值和 \"),a(\"code\",[t._v(\"v-bind\")]),t._v(\" 表达式\")])])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('\\x3c!-- 在双花括号中 --\\x3e\\n{{ message | capitalize }}\\n\\n\\x3c!-- 在 `v-bind` 中 --\\x3e\\n<div v-bind:id=\"rawId | formatId\"></div>\\n')])])]),a(\"ul\",[a(\"li\",[t._v(\"串联\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"{{ message | filterA | filterB }}\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"接收参数\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"{{ message | filterA('arg1', arg2) }}\\n\")])])]),a(\"h2\",{attrs:{id:\"组件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件\"}},[t._v(\"#\")]),t._v(\" 组件\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"动态组件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#动态组件\"}},[t._v(\"#\")]),t._v(\" 动态组件\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('\\x3c!-- 组件会在 `currentTabComponent` 改变时改变 --\\x3e\\n<component :is=\"currentTabComponent\"></component>\\n')])])]),a(\"h4\",{attrs:{id:\"keep-alive\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#keep-alive\"}},[t._v(\"#\")]),t._v(\" keep-alive\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('<keep-alive>\\n  <component v-bind:is=\"currentTabComponent\"></component>\\n</keep-alive>\\n')])])]),a(\"p\",[a(\"strong\",[t._v(\"遇到的问题：不需要缓存的组件也被缓存\")])]),t._v(\" \"),a(\"p\",[t._v(\"解决方案：\"),a(\"code\",[t._v(\"include\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"exclude\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('<keep-alive exclude=\"Detail\">\\n  <component :is=\"currentTabComponent\"></component>\\n</keep-alive>\\n')])])]),a(\"h3\",{attrs:{id:\"单文件组件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#单文件组件\"}},[t._v(\"#\")]),t._v(\" 单文件组件\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"文件扩展名为 .vue 的 single-file components (单文件组件)\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[void 0,t._v(\"包起来，只能有一个根元素\")],2)]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"导出组件内容\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"<script>\\n\\tmodule.exports = {\\n\\t\\tname: 'componentA',\\n\\t\\tdata: function() {\\n\\t\\t\\treturn {}\\n\\t\\t}\\n\\t\\t// 其他配置\\n\\t\\t...\\n\\t}\\n<\\/script>\\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"样式\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"scoped\")]),t._v(\"的作用是：使style中定义的样式只在当前组件中生效，避免污染全局样式\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"<style scoped>\\n</style>\\n\")])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"路由\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#路由\"}},[t._v(\"#\")]),t._v(\" 路由\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"关键组件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关键组件\"}},[t._v(\"#\")]),t._v(\" 关键组件\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"router-link\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#router-link\"}},[t._v(\"#\")]),t._v(\" \"),a(\"code\",[t._v(\"router-link\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[t._v(\"<router-link>\")]),t._v(\" 组件支持用户在具有路由功能的应用中 (点击) 导航。\")]),t._v(\" \"),a(\"p\",[t._v(\"通过 \"),a(\"code\",[t._v(\"to\")]),t._v(\" 属性指定目标地址，默认渲染成带有正确链接的 \"),a(\"code\",[t._v(\"<a>\")]),t._v(\" 标签，可以通过配置 \"),a(\"code\",[t._v(\"tag\")]),t._v(\" 属性生成别的标签.。\")]),t._v(\" \"),a(\"p\",[t._v(\"另外，当目标路由成功激活时，链接元素自动设置一个表示激活的 CSS 类名。\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"to\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#to\"}},[t._v(\"#\")]),t._v(\" to\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型：\"),a(\"code\",[t._v(\"string | Location\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"required\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"表示目标路由的链接。当被点击后，内部会立刻把 \"),a(\"code\",[t._v(\"to\")]),t._v(\" 的值传到 \"),a(\"code\",[t._v(\"router.push()\")]),t._v(\"，所以这个值可以是一个字符串或者是描述目标位置的对象。\")])])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"replace\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#replace\"}},[t._v(\"#\")]),t._v(\" replace\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"boolean\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v(\"false\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"设置 \"),a(\"code\",[t._v(\"replace\")]),t._v(\" 属性的话，当点击时，会调用 \"),a(\"code\",[t._v(\"router.replace()\")]),t._v(\" 而不是 \"),a(\"code\",[t._v(\"router.push()\")]),t._v(\"，于是导航后不会留下 history 记录。\")])])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"append\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#append\"}},[t._v(\"#\")]),t._v(\" append\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"boolean\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v(\"false\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"设置 \"),a(\"code\",[t._v(\"append\")]),t._v(\" 属性后，则在当前 (相对) 路径前添加基路径。例如，我们从 \"),a(\"code\",[t._v(\"/a\")]),t._v(\" 导航到一个相对路径 \"),a(\"code\",[t._v(\"b\")]),t._v(\"，如果没有配置 \"),a(\"code\",[t._v(\"append\")]),t._v(\"，则路径为 \"),a(\"code\",[t._v(\"/b\")]),t._v(\"，如果配了，则为 \"),a(\"code\",[t._v(\"/a/b\")])]),t._v(\" \"),a(\"p\",[t._v(\"用到嵌套路由中，就不需要写多层path\")])])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"tag\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tag\"}},[t._v(\"#\")]),t._v(\" tag\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"string\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v('\"a\"')])]),t._v(\" \"),a(\"p\",[t._v(\"有时候想要 \"),a(\"code\",[t._v(\"<router-link>\")]),t._v(\" 渲染成某种标签，例如 \"),a(\"code\",[t._v(\"<li>\")]),t._v(\"。 于是我们使用 \"),a(\"code\",[t._v(\"tag\")]),t._v(\" prop 类指定何种标签，同样它还是会监听点击，触发导航。\")])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"active-class\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#active-class\"}},[t._v(\"#\")]),t._v(\" active-class\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"string\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v('\"router-link-active\"')])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"设置链接激活时使用的 CSS 类名。默认值可以通过路由的构造选项 \"),a(\"code\",[t._v(\"linkActiveClass\")]),t._v(\" 来全局配置。\")])])])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"exact\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#exact\"}},[t._v(\"#\")]),t._v(\" exact\")]),t._v(\" \"),a(\"blockquote\",[a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"boolean\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v(\"false\")])]),t._v(\" \"),a(\"p\",[t._v(\"“是否激活”默认类名的依据是\"),a(\"strong\",[t._v(\"包含匹配\")]),t._v(\"。 举个例子，如果当前的路径是 \"),a(\"code\",[t._v(\"/a\")]),t._v(\" 开头的，那么 \"),a(\"code\",[t._v('<router-link to=\"/a\">')]),t._v(\" 也会被设置 CSS 类名。\")]),t._v(\" \"),a(\"p\",[t._v(\"按照这个规则，每个路由都会激活 \"),a(\"code\",[t._v('<router-link to=\"/\">')]),t._v(\"！想要链接使用“精确匹配模式”，则使用 \"),a(\"code\",[t._v(\"exact\")]),t._v(\" 属性\")])])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"router-view\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#router-view\"}},[t._v(\"#\")]),t._v(\" \"),a(\"code\",[t._v(\"router-view\")])]),t._v(\" \"),a(\"blockquote\",[a(\"router-view\",[t._v(\" 组件是一个 functional 组件，渲染路径匹配到的视图组件。\"),a(\"router-view\",[t._v(\" 渲染的组件还可以内嵌自己的 \"),a(\"router-view\",[t._v(\"，根据嵌套路径，渲染嵌套组件。\\n\")])],1)],1)],1),t._v(\" \"),a(\"h5\",{attrs:{id:\"name-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#name-2\"}},[t._v(\"#\")]),t._v(\" name\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"有时候想同时 (同级) 展示多个视图，而不是嵌套展示，例如创建一个布局，有 \"),a(\"code\",[t._v(\"sidebar\")]),t._v(\" (侧导航) 和 \"),a(\"code\",[t._v(\"main\")]),t._v(\" (主内容) 两个视图，这个时候命名视图就派上用场了。你可以在界面中拥有多个单独命名的视图，而不是只有一个单独的出口。如果 \"),a(\"code\",[t._v(\"router-view\")]),t._v(\" 没有设置名字，那么默认为 \"),a(\"code\",[t._v(\"default\")])])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"string\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v('\"default\"')])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"如果 \"),a(\"code\",[t._v(\"<router-view>\")]),t._v(\"设置了名称，则会渲染对应的路由配置中 \"),a(\"code\",[t._v(\"components\")]),t._v(\" 下的相应组件\")])])])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('<router-view class=\"view one\"></router-view>\\n<router-view class=\"view two\" name=\"a\"></router-view>\\n<router-view class=\"view three\" name=\"b\"></router-view>\\n\\n// config\\nconst router = new VueRouter({\\n  routes: [\\n    {\\n      path: \\'/\\',\\n      components: {\\n        default: Foo,\\n        a: Bar,\\n        b: Baz\\n      }\\n    }\\n  ]\\n})\\n')])])]),a(\"h3\",{attrs:{id:\"router-config\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#router-config\"}},[t._v(\"#\")]),t._v(\" router config\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"routes\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#routes\"}},[t._v(\"#\")]),t._v(\" routes\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"interface RouteConfig = {\\n  path: string,   // 路由路径\\n  component?: Component,  //  该路由对应展示的组件\\n  name?: string, // 命名路由\\n  components?: { [name: string]: Component }, // 命名视图组件\\n  redirect?: string | Location | Function,  //  进入该路由时重定向到其他路径\\n  props?: boolean | Object | Function,\\n  alias?: string | Array<string>, // 别名：当用户访问 /b 时，URL 会保持为 /b，但是路由匹配则为 /a，就像用户访问 /a 一样。\\n  children?: Array<RouteConfig>, // 嵌套路由\\n  beforeEnter?: (to: Route, from: Route, next: Function) => void,\\n  meta?: any,\\n  caseSensitive?: boolean, // 匹配规则是否大小写敏感？(默认值：false)\\n  pathToRegexpOptions?: Object // 编译正则的选项\\n}\\n\")])])]),a(\"h4\",{attrs:{id:\"mode\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mode\"}},[t._v(\"#\")]),t._v(\" mode\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型: \"),a(\"code\",[t._v(\"string\")])]),t._v(\" \"),a(\"li\",[t._v(\"默认值: \"),a(\"code\",[t._v('\"hash\" (浏览器环境) | \"abstract\" (Node.js 环境)')])]),t._v(\" \"),a(\"li\",[t._v(\"可选值: \"),a(\"code\",[t._v('\"hash\" | \"history\" | \"abstract\"')])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"base\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#base\"}},[t._v(\"#\")]),t._v(\" base\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"string\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v('\"/\"')])]),t._v(\" \"),a(\"p\",[t._v(\"应用的基路径。例如，如果整个单页应用服务在 \"),a(\"code\",[t._v(\"/app/\")]),t._v(\" 下，然后 \"),a(\"code\",[t._v(\"base\")]),t._v(\" 就应该设为 \"),a(\"code\",[t._v('\"/app/\"')])])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"linkactiveclass\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#linkactiveclass\"}},[t._v(\"#\")]),t._v(\" linkActiveClass\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"string\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v('\"router-link-active\"')])]),t._v(\" \"),a(\"p\",[t._v(\"全局配置 \"),a(\"code\",[t._v(\"<router-link>\")]),t._v(\" 默认的激活的 class。\")])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"scrollbehavior\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#scrollbehavior\"}},[t._v(\"#\")]),t._v(\" scrollBehavior\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"#%E6%BB%9A%E5%8A%A8%E8%A1%8C%E4%B8%BA\"}},[t._v(\"滚动行为\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型: `Function\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"fallback\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#fallback\"}},[t._v(\"#\")]),t._v(\" fallback\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"类型: \"),a(\"code\",[t._v(\"boolean\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"默认值: \"),a(\"code\",[t._v(\"true\")])]),t._v(\" \"),a(\"p\",[t._v(\"当浏览器不支持 \"),a(\"code\",[t._v(\"history.pushState\")]),t._v(\" 控制路由是否应该回退到 \"),a(\"code\",[t._v(\"hash\")]),t._v(\" 模式。默认值为 \"),a(\"code\",[t._v(\"true\")]),t._v(\"。\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"实例方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实例方法\"}},[t._v(\"#\")]),t._v(\" 实例方法\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"编程式导航\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编程式导航\"}},[t._v(\"#\")]),t._v(\" 编程式导航\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"router.push(path)\")]),t._v(\": 跳转到某个路径\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"router.replace(path)\")]),t._v(\":不产生新的历史记录\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"router.go(num)\")]),t._v(\":向前进num个路径，如果是负数，就返回num个记录\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"router.back()\")]),t._v(\":返回上一个记录\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"router.forward()\")]),t._v(\":向前进一个记录\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"// 字符串\\nrouter.push('home')\\n\\n// 对象\\nrouter.push({ path: 'home' })\\n\\n// 命名的路由\\nrouter.push({ name: 'user', params: { userId: '123' }})\\n\\n// 带查询参数，变成 /register?plan=private\\nrouter.push({ path: 'register', query: { plan: 'private' }})\\n\")])])]),a(\"h4\",{attrs:{id:\"导航守卫\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#导航守卫\"}},[t._v(\"#\")]),t._v(\" 导航守卫\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"其他-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#其他-2\"}},[t._v(\"#\")]),t._v(\" 其他\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"路由懒加载\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#路由懒加载\"}},[t._v(\"#\")]),t._v(\" 路由懒加载\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"过渡效果\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#过渡效果\"}},[t._v(\"#\")]),t._v(\" 过渡效果\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"滚动行为\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#滚动行为\"}},[t._v(\"#\")]),t._v(\" 滚动行为\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"vuex\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vuex\"}},[t._v(\"#\")]),t._v(\" vuex\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"组件间通信方式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件间通信方式\"}},[t._v(\"#\")]),t._v(\" 组件间通信方式\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"父子\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#父子\"}},[t._v(\"#\")]),t._v(\" 父子\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"props和$emit\")]),t._v(\" \"),a(\"li\",[t._v(\"$attrs，$listener\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"跨级\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#跨级\"}},[t._v(\"#\")]),t._v(\" 跨级\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"通过父子组件通信方式，层层传递\")]),t._v(\" \"),a(\"li\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"非嵌套层级关系\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#非嵌套层级关系\"}},[t._v(\"#\")]),t._v(\" 非嵌套层级关系\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"兄弟\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#兄弟\"}},[t._v(\"#\")]),t._v(\" 兄弟\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"其他-3\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#其他-3\"}},[t._v(\"#\")]),t._v(\" 其他\")]),t._v(\" \"),a(\"h1\",{attrs:{id:\"vue3\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue3\"}},[t._v(\"#\")]),t._v(\" vue3\")])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}